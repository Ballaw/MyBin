#ifndef PRIMES_CC_H
#define PRIMES_CC_H
#ifndef uns64
	#define uns64 unsigned long long
#endif

/*
 * Sieve of Eratosthenes
 *
 * Returns a pointer to an array that contains a Prime List in bitwise, wheel factorized form
 */
unsigned char* SieveEratosthenes(int);

/*
 * Prime List
 *
 * Returns a pointer to an array that contains a list of primes beginning at index 0 with 2
 * The last index+1 value is set to 0
 */
int* primeListE(int);
int* primeListE(int,unsigned char*);

/*
 * Prime Index List
 *
 * Returns a pointer to a char array that defines primes by using the array index
 * Ex. Array[index]=1 if the index is prime
 */
unsigned char* primeIndexListE(int);
unsigned char* primeIndexListE(int,unsigned char*);

/*
 * Prime Factors
 *
 * Returns a pointer to an array of the prime factors of the input number
 * The input can be obtained by multiplying all the elements of the array
 */
int* primeFactorsE(int);
int* primeFactorsE(int,int*);
uns64* primeFactorsE(uns64);

/*
 * Prime Check
 *
 * Returns true if the input is a prime
 * Takes in the Prime List generated by Sieve of Eratosthenes
 */
bool isPrimeE(int,unsigned char*);

/*
 * Prime Check
 *
 * Returns true if the input is a prime
 */
bool isPrime(int);
bool isPrime(uns64);

#endif
